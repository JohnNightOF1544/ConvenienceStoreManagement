@page "/editproduct/{productId}"

@inject NavigationManager NavigationManager
@inject IAddProductUseCase AddProductUseCase
@inject IGetProductByIdUseCase GetProductByIdUseCase
@inject IEditProductUseCase EditProductUseCase
@inject IViewCategoriesUseCase ViewCategoriesUseCase

<h3> Edit Product </h3>

@if (product != null)
{

    <EditForm Model="product" OnInvalidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="category">Category</label>
            <select id="category" @bind="product.CategoryId" class="form-control">
                <option sselected></option>
                @foreach (var cat in categories)
                {
                    <option value="@cat.CategoryId">@cat.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price"@bind-Value:format="F2" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="qty">Quantity</label>
            <InputNumber id="qty" @bind-Value="product.Quantity" class="form-control"></InputNumber>
        </div>


        <button type="submit" class="btn btn-primary" @onclick="OnValidSubmit">Save</button>
        
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>

    </EditForm>

}




@code {

    [Parameter]
    public string ProductId { get; set; } = string.Empty;

    private Product product = new Product();

    private List<Category> categories = new List<Category>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        categories = ViewCategoriesUseCase.Execute().ToList();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.ProductId, out int iProductId))
        {
            var prod = GetProductByIdUseCase.Execute(iProductId);
            this.product = new Product {
                    ProductId = prod.ProductId,
                    Name = prod.Name,
                    CategoryId = prod.CategoryId,
                    Price = prod.Price,
                    Quantity = prod.Quantity
        };

        }
    }

    private void OnValidSubmit()
    {
        EditProductUseCase.Execute(this.product);
        NavigationManager.NavigateTo("/products");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/products");
    }

}
