@page "/products"

@inject NavigationManager NavigationManager
@inject IViewProductsUseCase ViewProductsUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase

<h3>ProductsComponent</h3>
<br />
@if (products != null)
{
    <table class="table">
        <thead>
            <tr>

                <th>Product Name</th>
                <th>Price</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.CategoryId</td>
                    <td>@product.Name</td>
                    <td>@(Math.Round(product.Price, 2))</td>
                    <td>@product.Quantity</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />

<button type="button" @onclick="OnClickAddProduct" class="btn btn-primary">Add Product</button>




@code {
    private List<Product> products = new List<Product>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        products = ViewProductsUseCase.Execute().ToList();
    }

    private void OnClickAddProduct()
    {
        NavigationManager.NavigateTo("/addproduct");
    }



    //<th>Products Category</th>
    //<td>@GetCategoryByIdUseCase.Execute(product.CategoryId)?.Name</td>
    //<td>@product.CategoryId.HasValue?GetCategoryByIdUseCase.Execute(product.CategoryId)?.Name:""</td> with ? in model
}
